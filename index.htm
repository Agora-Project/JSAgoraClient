<head>
    <META charset="utf-8">
    <title>Agora</title>
    <style type="text/css">
        .inactive {
            display: none;
        } 
        #AppBody {
            border: 1px solid #e3e3e3;
            border-radius: 4px;
            width: 1320px;
            height: 540px;
            position: relative;
            overflow: hidden;
        }
        #InputPanel {
            width: 280px;
            height: 500px;
            padding: 20px 19px 20px 20px;
            background-color: #f5f5f5;
            border-right: 1px solid #e3e3e3;
            box-shadow: inset 0 1px 1px rgba(0,0,0,0.05);
            position: absolute;
            left: 0;
        } 
        #GraphPanel {
            width: 1000px;
            height: 540px;
            position: absolute;
            left: 320px;
        }
    </style>
    <script type="text/javascript" src="js/libs/java_socket_bridge.js"></script>
    <script type="text/javascript" src="http://www.d3plus.org/js/d3.js"></script>
    <script type="text/javascript" src="http://www.d3plus.org/js/d3plus.js"></script>
    <script type="text/javascript">
        
        function logIn() {
                if (JAVA_READY_FLAG === true) {
                    var bridge = getJAgoraBridge();
                    bridge.logIn(d3.select("#usernameField").node().value, d3.select("#passwordField").node().value);
                    loadGraph();
                }
                else alert("Applet not yet ready.");
            d3.select("#usernameField").property("value", "");
            d3.select("#passwordField").property("value", "");
        }
        
        var jsgraph = {
            nodes : [],
            links : []
        };
        function loadGraph() {
            var bridge = getJAgoraBridge();
            var graph = bridge.getThread(1);
            var posts = graph.getNodes();
            var edges = graph.getAttacks();
            
            var edge, i, post, j;
            
            for (i = 0; i < posts.length; i++) {
                jsgraph.nodes.push({post : posts[i]});
            }
            
            for (i = 0; i < edges.length; i++) {
                edge = edges[i];
                var target = null, origin = null;
                for (j = 0; j < posts.length; j++) {
                    post = posts[j];
                    if (post.getID().equals(edge.getTarget().getID())) {
                        target = j;
                    }
                    if (post.getID().equals(edge.getOrigin().getID())) {
                        origin = j;
                    }
                    if (target != null && origin != null) {
                        jsgraph.links.push({source : origin, target : target});
                        break;
                    }
                }
                
            }
            
            var force = d3.layout.force()
                 .nodes(jsgraph.nodes)
                 .links(jsgraph.links)
                 .size([1000, 540])
                 .linkDistance([150])
                 .linkStrength(0.3)
                 .gravity(0)
                 .charge([-50])
                 .chargeDistance([70])
                 .start();
            
            edges = svg.selectAll("line")
                .data(jsgraph.links)
                .enter()
                .append("line")
                .style("stroke", "#ccc")
                .style("stroke-width", 1);
        
            var nodes = svg.selectAll("g")
                .data(jsgraph.nodes)
                .enter()
                .append("g");
        
            var rects = svg.selectAll("g")
                .append("rect")
                .attr("width", 150)
                .attr("height", 60)
                .call(force.drag);
        
            var titles = svg.selectAll("g")
                .append("text")
                .text(function(d) {return d.post.getContent().get("Title");})
                .attr("font-family", "sans-serif")
                .attr("font-size", "11px");
        
            var numPosts = 0;
            var texts = svg.selectAll("g")
                .append("text")
                .text(function(d) {return d.post.getContent().get("Text");})
                .attr("font-size", "11px")
                .attr("font-family", "sans-serif")
                .attr("fill", "white")
                .attr("width", 300)
                .attr("height", 100)
                .attr("id", function(d) { return "text" + numPosts++;});
             
            for (i = 0; i < numPosts; i++) {
                    d3plus.textwrap()
                        .container(d3.select("#text" + i))
                        .draw();
                }
            
            
            force.on("tick", function() {

                edges.attr("x1", function(d) { return d.source.x; })
                     .attr("y1", function(d) { return d.source.y; })
                     .attr("x2", function(d) { return d.target.x; })
                     .attr("y2", function(d) { return d.target.y; });

                rects.attr("x", function(d) { return d.x; })
                     .attr("y", function(d) { return d.y; });
             
                titles.attr("x", function(d) { return d.x; })
                     .attr("y", function(d) { return d.y -5; });
             
                texts.attr("x", function(d) { return d.x; })
                     .attr("y", function(d) { return d.y +15; });
                texts.selectAll("tspan").attr("x", function(d) { return d.x; });

            });
            
        }
    </script>
</head>

<body>

    <div>
        <applet id="JAgoraJSBridge" archive="JAgoraLib.jar" code="org.agora.lib.JAgoraJSBridge.class" width="1" height="1"></applet>
        <div id="AppBody">
            <div id="InputPanel" class="panel tab-content">
                <div id="LoginPanel" class="tab-pane active">
                    Login
                    <p></p>

                    UserName:

                    <input type="text" id="usernameField">

                    Password:

                    <input type="password" id="passwordField">

                    <button type="button" onclick="logIn()">Submit</button>
                </div>
                <div id="EditPanel" class="tab-pane inactive">
                </div>
            </div>
            <div id="GraphPanel">
            </div>
        </div>
    </div>
    <script type="text/javascript">
        var svg = d3.select("#GraphPanel")
                .append("svg")
                .attr("width", 1000)
                .attr("height", 540);
    </script>
</body>
</html>